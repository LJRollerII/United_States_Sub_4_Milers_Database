<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='US Sub-4 Milers+ (US_Sub4_Milers)' inline='true' name='federated.09niz0w1n99kag10kek2o06zr3b9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='US_Sub4_Milers' name='excel-direct.0sdqrwf11g0qp015u04ep1e50njk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ljcoo/NSS/Projects/United_States_Sub_4_Milers_Database/spreadsheets/US_Sub4_Milers.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='Avg . of Runners Sub-4 Per Dec' table='[&apos;Avg # of Runners Sub-4 Per Dec$&apos;]' type='table'>
          <columns gridOrigin='A1:B9:no:A1:B9:0' header='yes' outcome='6'>
            <column datatype='string' name='Decade' ordinal='0' />
            <column datatype='real' name='Average Number of Runners Sub-4 Per Year' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='US Sub-4 Milers' table='[&apos;US Sub-4 Milers$&apos;]' type='table'>
            <columns gridOrigin='A1:P660:no:A1:P660:0' header='yes' outcome='2'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='Decade' ordinal='1' />
              <column datatype='integer' name='Order' ordinal='2' />
              <column datatype='string' name='Name' ordinal='3' />
              <column datatype='string' name='Affliation' ordinal='4' />
              <column datatype='string' name='Level' ordinal='5' />
              <column datatype='string' name='Time' ordinal='6' />
              <column datatype='real' name='Time_Sec' ordinal='7' />
              <column datatype='string' name='Area' ordinal='8' />
              <column datatype='string' name='Location' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='real' name='Latitude' ordinal='11' />
              <column datatype='real' name='Longitude' ordinal='12' />
              <column datatype='string' name='Country' ordinal='13' />
              <column datatype='date' name='Date' ordinal='14' />
              <column datatype='string' name='Image' ordinal='15' />
            </columns>
          </relation>
          <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='Avg . of Runners Sub-4 Per Dec' table='[&apos;Avg # of Runners Sub-4 Per Dec$&apos;]' type='table'>
            <columns gridOrigin='A1:B9:no:A1:B9:0' header='yes' outcome='6'>
              <column datatype='string' name='Decade' ordinal='0' />
              <column datatype='real' name='Average Number of Runners Sub-4 Per Year' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='FS Duo General' table='[&apos;FS Duo General$&apos;]' type='table'>
            <columns gridOrigin='A1:I13:no:A1:I13:0' header='yes' outcome='2'>
              <column datatype='string' name='Name' ordinal='0' />
              <column datatype='datetime' name='First Sub-4 Mile Time' ordinal='1' />
              <column datatype='real' name='FS4_Sec' ordinal='2' />
              <column datatype='datetime' name='Mile PR' ordinal='3' />
              <column datatype='real' name='PR_Sec' ordinal='4' />
              <column datatype='datetime' name='Difference Between First and Fastest Mile' ordinal='5' />
              <column datatype='real' name='DFF_Sec' ordinal='6' />
              <column datatype='string' name='Date of First Sub-4 Mile' ordinal='7' />
              <column datatype='string' name='Family' ordinal='8' />
            </columns>
          </relation>
          <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='Sub-4 By Decade' table='[&apos;Sub-4 By Decade$&apos;]' type='table'>
            <columns gridOrigin='A1:D9:no:A1:D9:0' header='yes' outcome='6'>
              <column datatype='string' name='Decade' ordinal='0' />
              <column datatype='integer' name='Sub-4 Miles' ordinal='1' />
              <column datatype='string' name='Average Sub-4 Mile Time' ordinal='2' />
              <column datatype='real' name='Time_Sec' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='Sub-4 By Year' table='[&apos;Sub-4 By Year$&apos;]' type='table'>
            <columns gridOrigin='A1:E64:no:A1:E64:0' header='yes' outcome='6'>
              <column datatype='string' name='Year' ordinal='0' />
              <column datatype='integer' name='Sub-4 Milers' ordinal='1' />
              <column datatype='string' name='Average Sub-4 Mile Time' ordinal='2' />
              <column datatype='real' name='Time_Sec' ordinal='3' />
              <column datatype='string' name='Decade' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Affliation]' value='[US Sub-4 Milers].[Affliation]' />
          <map key='[Area]' value='[US Sub-4 Milers].[Area]' />
          <map key='[Average Number of Runners Sub-4 Per Year]' value='[Avg . of Runners Sub-4 Per Dec].[Average Number of Runners Sub-4 Per Year]' />
          <map key='[Average Sub-4 Mile Time (Sub-4 By Decade)]' value='[Sub-4 By Decade].[Average Sub-4 Mile Time]' />
          <map key='[Average Sub-4 Mile Time]' value='[Sub-4 By Year].[Average Sub-4 Mile Time]' />
          <map key='[Country]' value='[US Sub-4 Milers].[Country]' />
          <map key='[DFF_Sec]' value='[FS Duo General].[DFF_Sec]' />
          <map key='[Date of First Sub-4 Mile]' value='[FS Duo General].[Date of First Sub-4 Mile]' />
          <map key='[Date]' value='[US Sub-4 Milers].[Date]' />
          <map key='[Decade (Avg . of Runners Sub-4 Per Dec)]' value='[Avg . of Runners Sub-4 Per Dec].[Decade]' />
          <map key='[Decade (Sub-4 By Decade)]' value='[Sub-4 By Decade].[Decade]' />
          <map key='[Decade (Sub-4 By Year)]' value='[Sub-4 By Year].[Decade]' />
          <map key='[Decade]' value='[US Sub-4 Milers].[Decade]' />
          <map key='[Difference Between First and Fastest Mile]' value='[FS Duo General].[Difference Between First and Fastest Mile]' />
          <map key='[FS4_Sec]' value='[FS Duo General].[FS4_Sec]' />
          <map key='[Family]' value='[FS Duo General].[Family]' />
          <map key='[First Sub-4 Mile Time]' value='[FS Duo General].[First Sub-4 Mile Time]' />
          <map key='[Image]' value='[US Sub-4 Milers].[Image]' />
          <map key='[Latitude]' value='[US Sub-4 Milers].[Latitude]' />
          <map key='[Level]' value='[US Sub-4 Milers].[Level]' />
          <map key='[Location]' value='[US Sub-4 Milers].[Location]' />
          <map key='[Longitude]' value='[US Sub-4 Milers].[Longitude]' />
          <map key='[Mile PR]' value='[FS Duo General].[Mile PR]' />
          <map key='[Name (FS Duo General)]' value='[FS Duo General].[Name]' />
          <map key='[Name]' value='[US Sub-4 Milers].[Name]' />
          <map key='[Order]' value='[US Sub-4 Milers].[Order]' />
          <map key='[PR_Sec]' value='[FS Duo General].[PR_Sec]' />
          <map key='[State]' value='[US Sub-4 Milers].[State]' />
          <map key='[Sub-4 Milers]' value='[Sub-4 By Year].[Sub-4 Milers]' />
          <map key='[Sub-4 Miles]' value='[Sub-4 By Decade].[Sub-4 Miles]' />
          <map key='[Time]' value='[US Sub-4 Milers].[Time]' />
          <map key='[Time_Sec (Sub-4 By Decade)]' value='[Sub-4 By Decade].[Time_Sec]' />
          <map key='[Time_Sec (Sub-4 By Year)]' value='[Sub-4 By Year].[Time_Sec]' />
          <map key='[Time_Sec]' value='[US Sub-4 Milers].[Time_Sec]' />
          <map key='[Year (Sub-4 By Year)]' value='[Sub-4 By Year].[Year]' />
          <map key='[Year]' value='[US Sub-4 Milers].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Decade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Decade]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Decade</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Order</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Affliation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Affliation]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Affliation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Level</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Level]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Level</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Time_Sec]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Time_Sec</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Image</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Image]</local-name>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias>Image</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[US Sub-4 Milers]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P660:no:A1:P660:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Decade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Decade (Avg . of Runners Sub-4 Per Dec)]</local-name>
            <parent-name>[Avg . of Runners Sub-4 Per Dec]</parent-name>
            <remote-alias>Decade</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Number of Runners Sub-4 Per Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Number of Runners Sub-4 Per Year]</local-name>
            <parent-name>[Avg . of Runners Sub-4 Per Dec]</parent-name>
            <remote-alias>Average Number of Runners Sub-4 Per Year</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Avg . of Runners Sub-4 Per Dec]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B9:no:A1:B9:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name (FS Duo General)]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Sub-4 Mile Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[First Sub-4 Mile Time]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>First Sub-4 Mile Time</remote-alias>
            <ordinal>19</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FS4_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FS4_Sec]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>FS4_Sec</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mile PR</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Mile PR]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>Mile PR</remote-alias>
            <ordinal>21</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PR_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PR_Sec]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>PR_Sec</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference Between First and Fastest Mile</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Difference Between First and Fastest Mile]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>Difference Between First and Fastest Mile</remote-alias>
            <ordinal>23</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DFF_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DFF_Sec]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>DFF_Sec</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of First Sub-4 Mile</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date of First Sub-4 Mile]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>Date of First Sub-4 Mile</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FS Duo General]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I13:no:A1:I13:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Decade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Decade (Sub-4 By Decade)]</local-name>
            <parent-name>[Sub-4 By Decade]</parent-name>
            <remote-alias>Decade</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-4 Miles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sub-4 Miles]</local-name>
            <parent-name>[Sub-4 By Decade]</parent-name>
            <remote-alias>Sub-4 Miles</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Sub-4 Mile Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Average Sub-4 Mile Time (Sub-4 By Decade)]</local-name>
            <parent-name>[Sub-4 By Decade]</parent-name>
            <remote-alias>Average Sub-4 Mile Time</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Time_Sec (Sub-4 By Decade)]</local-name>
            <parent-name>[Sub-4 By Decade]</parent-name>
            <remote-alias>Time_Sec</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sub-4 By Decade]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D9:no:A1:D9:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year (Sub-4 By Year)]</local-name>
            <parent-name>[Sub-4 By Year]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-4 Milers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sub-4 Milers]</local-name>
            <parent-name>[Sub-4 By Year]</parent-name>
            <remote-alias>Sub-4 Milers</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Sub-4 Mile Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Average Sub-4 Mile Time]</local-name>
            <parent-name>[Sub-4 By Year]</parent-name>
            <remote-alias>Average Sub-4 Mile Time</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Time_Sec (Sub-4 By Year)]</local-name>
            <parent-name>[Sub-4 By Year]</parent-name>
            <remote-alias>Time_Sec</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Decade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Decade (Sub-4 By Year)]</local-name>
            <parent-name>[Sub-4 By Year]</parent-name>
            <remote-alias>Decade</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sub-4 By Year]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E64:no:A1:E64:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='DFF Sec' datatype='real' name='[DFF_Sec]' role='measure' type='quantitative' />
      <column caption='FS4 Sec' datatype='real' name='[FS4_Sec]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
          <semantic-value key='&quot;Ames&quot;' value='42.030799999999999' />
          <semantic-value key='&quot;Annapolis&quot;' value='38.978400000000001' />
          <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
          <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
          <semantic-value key='&quot;Bakersfield&quot;' value='35.3733' />
          <semantic-value key='&quot;Beaverton&quot;' value='45.486899999999999' />
          <semantic-value key='&quot;Belfast&quot;' value='54.597299999999997' />
          <semantic-value key='&quot;Berkeley&quot;' value='37.871499999999997' />
          <semantic-value key='&quot;Berlin&quot;' value='52.520000000000003' />
          <semantic-value key='&quot;Bern&quot;' value='46.948' />
          <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
          <semantic-value key='&quot;Blacksburg&quot;' value='37.229599999999998' />
          <semantic-value key='&quot;Bloomington&quot;' value='39.165300000000002' />
          <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
          <semantic-value key='&quot;Bowling Green&quot;' value='36.968499999999999' />
          <semantic-value key='&quot;Brasschaat&quot;' value='51.290100000000002' />
          <semantic-value key='&quot;Brunswick&quot;' value='43.914000000000001' />
          <semantic-value key='&quot;Burnaby&quot;' value='49.248800000000003' />
          <semantic-value key='&quot;Cambridge&quot;' value='42.373600000000003' />
          <semantic-value key='&quot;Carbondale&quot;' value='37.7273' />
          <semantic-value key='&quot;Charlottesville&quot;' value='38.029299999999999' />
          <semantic-value key='&quot;Chico&quot;' value='39.728499999999997' />
          <semantic-value key='&quot;Columbia&quot;' value='34.000700000000002' />
          <semantic-value key='&quot;Compton&quot;' value='33.895800000000001' />
          <semantic-value key='&quot;Concord&quot;' value='42.4604' />
          <semantic-value key='&quot;Cork&quot;' value='51.898499999999999' />
          <semantic-value key='&quot;Corvallis&quot;' value='44.564599999999999' />
          <semantic-value key='&quot;Dedham&quot;' value='42.243600000000001' />
          <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
          <semantic-value key='&quot;Durham&quot;' value='35.994' />
          <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
          <semantic-value key='&quot;Falmouth&quot;' value='41.553199999999997' />
          <semantic-value key='&quot;Fargo&quot;' value='46.877200000000002' />
          <semantic-value key='&quot;Fayetteville&quot;' value='36.0627' />
          <semantic-value key='&quot;Fresno&quot;' value='36.7378' />
          <semantic-value key='&quot;Gainesville&quot;' value='29.651599999999998' />
          <semantic-value key='&quot;Gateshead&quot;' value='54.9527' />
          <semantic-value key='&quot;Geneva&quot;' value='41.805100000000003' />
          <semantic-value key='&quot;Greenville&quot;' value='34.852600000000002' />
          <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
          <semantic-value key='&quot;Inglewood&quot;' value='33.9617' />
          <semantic-value key='&quot;Johnson City&quot;' value='36.313400000000001' />
          <semantic-value key='&quot;Lawrence&quot;' value='38.971699999999998' />
          <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
          <semantic-value key='&quot;Lincoln&quot;' value='40.813600000000001' />
          <semantic-value key='&quot;London&quot;' value='51.507199999999997' />
          <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
          <semantic-value key='&quot;Luxembourg&quot;' value='49.815300000000001' />
          <semantic-value key='&quot;Lynchburg&quot;' value='37.413800000000002' />
          <semantic-value key='&quot;Madison&quot;' value='43.072200000000002' />
          <semantic-value key='&quot;Marion&quot;' value='40.558399999999999' />
          <semantic-value key='&quot;Modesto&quot;' value='37.639299999999999' />
          <semantic-value key='&quot;Murfreesboro&quot;' value='35.845599999999997' />
          <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
          <semantic-value key='&quot;New Haven&quot;' value='41.308300000000003' />
          <semantic-value key='&quot;Nice&quot;' value='43.7102' />
          <semantic-value key='&quot;Oslo&quot;' value='59.913899999999998' />
          <semantic-value key='&quot;Oxford&quot;' value='51.752000000000002' />
          <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
          <semantic-value key='&quot;Portland&quot;' value='45.5152' />
          <semantic-value key='&quot;Princeton&quot;' value='40.357300000000002' />
          <semantic-value key='&quot;Providence&quot;' value='41.823999999999998' />
          <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
          <semantic-value key='&quot;Rieti&quot;' value='42.404499999999999' />
          <semantic-value key='&quot;Roanoke&quot;' value='37.271000000000001' />
          <semantic-value key='&quot;Saline&quot;' value='42.166699999999999' />
          <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
          <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
          <semantic-value key='&quot;San José&quot;' value='37.338700000000003' />
          <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
          <semantic-value key='&quot;Springfield&quot;' value='39.930700000000002' />
          <semantic-value key='&quot;St. Louis&quot;' value='38.627000000000002' />
          <semantic-value key='&quot;Stanford&quot;' value='37.424100000000003' />
          <semantic-value key='&quot;Stockholm&quot;' value='59.329300000000003' />
          <semantic-value key='&quot;Stockton&quot;' value='37.957700000000003' />
          <semantic-value key='&quot;Tillsonburg&quot;' value='42.865900000000003' />
          <semantic-value key='&quot;Toledo&quot;' value='41.652799999999999' />
          <semantic-value key='&quot;University Park&quot;' value='40.814799999999998' />
          <semantic-value key='&quot;Vancouver&quot;' value='49.282699999999998' />
          <semantic-value key='&quot;Villeneuve-d’Ascq&quot;' value='50.6233' />
          <semantic-value key='&quot;Walnut&quot;' value='34.020299999999999' />
          <semantic-value key='&quot;Wanganui&quot;' value='-39.933100000000003' />
          <semantic-value key='&quot;Warwick&quot;' value='41.700099999999999' />
          <semantic-value key='&quot;West Chester&quot;' value='39.960700000000003' />
          <semantic-value key='&quot;Westwood&quot;' value='34.063499999999998' />
          <semantic-value key='&quot;Woodland Hills&quot;' value='34.165399999999998' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
          <semantic-value key='&quot;Ames&quot;' value='-93.631900000000002' />
          <semantic-value key='&quot;Annapolis&quot;' value='-76.492199999999997' />
          <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
          <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
          <semantic-value key='&quot;Bakersfield&quot;' value='-119.0187' />
          <semantic-value key='&quot;Beaverton&quot;' value='-122.804' />
          <semantic-value key='&quot;Belfast&quot;' value='-5.9301000000000004' />
          <semantic-value key='&quot;Berkeley&quot;' value='-122.273' />
          <semantic-value key='&quot;Berlin&quot;' value='13.404999999999999' />
          <semantic-value key='&quot;Bern&quot;' value='7.4474' />
          <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
          <semantic-value key='&quot;Blacksburg&quot;' value='-80.413899999999998' />
          <semantic-value key='&quot;Bloomington&quot;' value='-86.526399999999995' />
          <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
          <semantic-value key='&quot;Bowling Green&quot;' value='-86.480800000000002' />
          <semantic-value key='&quot;Brasschaat&quot;' value='4.4916' />
          <semantic-value key='&quot;Brunswick&quot;' value='-69.966999999999999' />
          <semantic-value key='&quot;Burnaby&quot;' value='-122.98050000000001' />
          <semantic-value key='&quot;Cambridge&quot;' value='-71.109700000000004' />
          <semantic-value key='&quot;Carbondale&quot;' value='-89.216800000000006' />
          <semantic-value key='&quot;Charlottesville&quot;' value='-78.476699999999994' />
          <semantic-value key='&quot;Chico&quot;' value='-121.83750000000001' />
          <semantic-value key='&quot;Columbia&quot;' value='-81.034800000000004' />
          <semantic-value key='&quot;Compton&quot;' value='-118.2201' />
          <semantic-value key='&quot;Concord&quot;' value='-71.3489' />
          <semantic-value key='&quot;Cork&quot;' value='-8.4756' />
          <semantic-value key='&quot;Corvallis&quot;' value='-123.262' />
          <semantic-value key='&quot;Dedham&quot;' value='-71.167699999999996' />
          <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
          <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
          <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
          <semantic-value key='&quot;Falmouth&quot;' value='-70.608599999999996' />
          <semantic-value key='&quot;Fargo&quot;' value='-96.7898' />
          <semantic-value key='&quot;Fayetteville&quot;' value='-94.160600000000002' />
          <semantic-value key='&quot;Fresno&quot;' value='-119.7871' />
          <semantic-value key='&quot;Gainesville&quot;' value='-82.324799999999996' />
          <semantic-value key='&quot;Gateshead&quot;' value='-1.6033999999999999' />
          <semantic-value key='&quot;Geneva&quot;' value='-80.948099999999997' />
          <semantic-value key='&quot;Greenville&quot;' value='-82.394000000000005' />
          <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
          <semantic-value key='&quot;Inglewood&quot;' value='-118.3531' />
          <semantic-value key='&quot;Johnson City&quot;' value='-82.353499999999997' />
          <semantic-value key='&quot;Lawrence&quot;' value='-95.235299999999995' />
          <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
          <semantic-value key='&quot;Lincoln&quot;' value='-96.702600000000004' />
          <semantic-value key='&quot;London&quot;' value='-0.12759999999999999' />
          <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
          <semantic-value key='&quot;Luxembourg&quot;' value='6.1295999999999999' />
          <semantic-value key='&quot;Lynchburg&quot;' value='-79.142200000000003' />
          <semantic-value key='&quot;Madison&quot;' value='-89.400800000000004' />
          <semantic-value key='&quot;Marion&quot;' value='-85.659099999999995' />
          <semantic-value key='&quot;Modesto&quot;' value='-120.997' />
          <semantic-value key='&quot;Murfreesboro&quot;' value='-86.390299999999996' />
          <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
          <semantic-value key='&quot;New Haven&quot;' value='-72.927899999999994' />
          <semantic-value key='&quot;Nice&quot;' value='7.2619999999999996' />
          <semantic-value key='&quot;Oslo&quot;' value='10.7522' />
          <semantic-value key='&quot;Oxford&quot;' value='-1.2577' />
          <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
          <semantic-value key='&quot;Portland&quot;' value='-122.6784' />
          <semantic-value key='&quot;Princeton&quot;' value='-74.667199999999994' />
          <semantic-value key='&quot;Providence&quot;' value='-71.412800000000004' />
          <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
          <semantic-value key='&quot;Rieti&quot;' value='12.8567' />
          <semantic-value key='&quot;Roanoke&quot;' value='-79.941400000000002' />
          <semantic-value key='&quot;Saline&quot;' value='-83.781599999999997' />
          <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
          <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
          <semantic-value key='&quot;San José&quot;' value='-121.8853' />
          <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
          <semantic-value key='&quot;Springfield&quot;' value='-75.3202' />
          <semantic-value key='&quot;St. Louis&quot;' value='-90.199399999999997' />
          <semantic-value key='&quot;Stanford&quot;' value='-122.1661' />
          <semantic-value key='&quot;Stockholm&quot;' value='18.0686' />
          <semantic-value key='&quot;Stockton&quot;' value='-121.2908' />
          <semantic-value key='&quot;Tillsonburg&quot;' value='-80.7333' />
          <semantic-value key='&quot;Toledo&quot;' value='-83.537899999999993' />
          <semantic-value key='&quot;University Park&quot;' value='-77.865300000000005' />
          <semantic-value key='&quot;Vancouver&quot;' value='-123.1207' />
          <semantic-value key='&quot;Villeneuve-d’Ascq&quot;' value='3.1442999999999999' />
          <semantic-value key='&quot;Walnut&quot;' value='-117.8653' />
          <semantic-value key='&quot;Wanganui&quot;' value='175.02860000000001' />
          <semantic-value key='&quot;Warwick&quot;' value='-71.416200000000003' />
          <semantic-value key='&quot;West Chester&quot;' value='-75.605500000000006' />
          <semantic-value key='&quot;Westwood&quot;' value='-118.4455' />
          <semantic-value key='&quot;Woodland Hills&quot;' value='-118.60899999999999' />
        </semantic-values>
      </column>
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='PR Sec' datatype='real' name='[PR_Sec]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Time Sec (Sub-4 By Decade)' datatype='real' name='[Time_Sec (Sub-4 By Decade)]' role='measure' type='quantitative' />
      <column caption='Time Sec (Sub-4 By Year)' datatype='real' name='[Time_Sec (Sub-4 By Year)]' role='measure' type='quantitative' />
      <column caption='Time Sec' datatype='real' name='[Time_Sec]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year (Sub-4 By Year)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Avg . of Runners Sub-4 Per Dec' datatype='table' name='[__tableau_internal_object_id__].[Avg . of Runners Sub-4 Per Dec_BAF594001229454F9344E147379F29AE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='FS Duo General' datatype='table' name='[__tableau_internal_object_id__].[FS Duo General_3B1A4946FB494476AD8C87049DE0BE45]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sub-4 By Decade' datatype='table' name='[__tableau_internal_object_id__].[Sub-4 By Decade_96D254F9538C412A95FEE15BBC6A963F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sub-4 By Year' datatype='table' name='[__tableau_internal_object_id__].[Sub-4 By Year_E432E4766BBC4E85A631F610C79EE34F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='US Sub-4 Milers' datatype='table' name='[__tableau_internal_object_id__].[US Sub-4 Milers_D07292DA4CD24F9CAF3C7D29E2D3E50C]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, State'>
          <field>[Country]</field>
          <field>[State]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Avg . of Runners Sub-4 Per Dec' id='Avg . of Runners Sub-4 Per Dec_BAF594001229454F9344E147379F29AE'>
            <properties context=''>
              <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='Avg . of Runners Sub-4 Per Dec' table='[&apos;Avg # of Runners Sub-4 Per Dec$&apos;]' type='table'>
                <columns gridOrigin='A1:B9:no:A1:B9:0' header='yes' outcome='6'>
                  <column datatype='string' name='Decade' ordinal='0' />
                  <column datatype='real' name='Average Number of Runners Sub-4 Per Year' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='FS Duo General' id='FS Duo General_3B1A4946FB494476AD8C87049DE0BE45'>
            <properties context=''>
              <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='FS Duo General' table='[&apos;FS Duo General$&apos;]' type='table'>
                <columns gridOrigin='A1:I13:no:A1:I13:0' header='yes' outcome='2'>
                  <column datatype='string' name='Name' ordinal='0' />
                  <column datatype='datetime' name='First Sub-4 Mile Time' ordinal='1' />
                  <column datatype='real' name='FS4_Sec' ordinal='2' />
                  <column datatype='datetime' name='Mile PR' ordinal='3' />
                  <column datatype='real' name='PR_Sec' ordinal='4' />
                  <column datatype='datetime' name='Difference Between First and Fastest Mile' ordinal='5' />
                  <column datatype='real' name='DFF_Sec' ordinal='6' />
                  <column datatype='string' name='Date of First Sub-4 Mile' ordinal='7' />
                  <column datatype='string' name='Family' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sub-4 By Decade' id='Sub-4 By Decade_96D254F9538C412A95FEE15BBC6A963F'>
            <properties context=''>
              <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='Sub-4 By Decade' table='[&apos;Sub-4 By Decade$&apos;]' type='table'>
                <columns gridOrigin='A1:D9:no:A1:D9:0' header='yes' outcome='6'>
                  <column datatype='string' name='Decade' ordinal='0' />
                  <column datatype='integer' name='Sub-4 Miles' ordinal='1' />
                  <column datatype='string' name='Average Sub-4 Mile Time' ordinal='2' />
                  <column datatype='real' name='Time_Sec' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sub-4 By Year' id='Sub-4 By Year_E432E4766BBC4E85A631F610C79EE34F'>
            <properties context=''>
              <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='Sub-4 By Year' table='[&apos;Sub-4 By Year$&apos;]' type='table'>
                <columns gridOrigin='A1:E64:no:A1:E64:0' header='yes' outcome='6'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='integer' name='Sub-4 Milers' ordinal='1' />
                  <column datatype='string' name='Average Sub-4 Mile Time' ordinal='2' />
                  <column datatype='real' name='Time_Sec' ordinal='3' />
                  <column datatype='string' name='Decade' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='US Sub-4 Milers' id='US Sub-4 Milers_D07292DA4CD24F9CAF3C7D29E2D3E50C'>
            <properties context=''>
              <relation connection='excel-direct.0sdqrwf11g0qp015u04ep1e50njk' name='US Sub-4 Milers' table='[&apos;US Sub-4 Milers$&apos;]' type='table'>
                <columns gridOrigin='A1:P660:no:A1:P660:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='string' name='Decade' ordinal='1' />
                  <column datatype='integer' name='Order' ordinal='2' />
                  <column datatype='string' name='Name' ordinal='3' />
                  <column datatype='string' name='Affliation' ordinal='4' />
                  <column datatype='string' name='Level' ordinal='5' />
                  <column datatype='string' name='Time' ordinal='6' />
                  <column datatype='real' name='Time_Sec' ordinal='7' />
                  <column datatype='string' name='Area' ordinal='8' />
                  <column datatype='string' name='Location' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='real' name='Latitude' ordinal='11' />
                  <column datatype='real' name='Longitude' ordinal='12' />
                  <column datatype='string' name='Country' ordinal='13' />
                  <column datatype='date' name='Date' ordinal='14' />
                  <column datatype='string' name='Image' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Decade]' />
              <expression op='[Decade (Avg . of Runners Sub-4 Per Dec)]' />
            </expression>
            <first-end-point object-id='US Sub-4 Milers_D07292DA4CD24F9CAF3C7D29E2D3E50C' />
            <second-end-point object-id='Avg . of Runners Sub-4 Per Dec_BAF594001229454F9344E147379F29AE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Name]' />
              <expression op='[Name (FS Duo General)]' />
            </expression>
            <first-end-point object-id='US Sub-4 Milers_D07292DA4CD24F9CAF3C7D29E2D3E50C' />
            <second-end-point object-id='FS Duo General_3B1A4946FB494476AD8C87049DE0BE45' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Decade]' />
              <expression op='[Decade (Sub-4 By Decade)]' />
            </expression>
            <first-end-point object-id='US Sub-4 Milers_D07292DA4CD24F9CAF3C7D29E2D3E50C' />
            <second-end-point object-id='Sub-4 By Decade_96D254F9538C412A95FEE15BBC6A963F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (Sub-4 By Year)]' />
            </expression>
            <first-end-point object-id='US Sub-4 Milers_D07292DA4CD24F9CAF3C7D29E2D3E50C' />
            <second-end-point object-id='Sub-4 By Year_E432E4766BBC4E85A631F610C79EE34F' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Faster &amp; Slower than Avg (US_Sub4_Milers)' inline='true' name='federated.0sl74t80sf9p1g1cx84ah1h2zl8h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='US_Sub4_Milers' name='excel-direct.1gtr21b1a1ij3d15sm61n0gr3y7k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ljcoo/NSS/Projects/United_States_Sub_4_Milers_Database/spreadsheets/US_Sub4_Milers.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1gtr21b1a1ij3d15sm61n0gr3y7k' name='Faster &amp; Slower than Avg' table='[&apos;Faster &amp; Slower than Avg$&apos;]' type='table'>
          <columns gridOrigin='A1:C4:no:A1:C4:0' header='yes' outcome='6'>
            <column datatype='string' name='Group' ordinal='0' />
            <column datatype='integer' name='Number of Runners' ordinal='1' />
            <column datatype='real' name='Percent' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1gtr21b1a1ij3d15sm61n0gr3y7k' name='Faster &amp; Slower than Avg' table='[&apos;Faster &amp; Slower than Avg$&apos;]' type='table'>
          <columns gridOrigin='A1:C4:no:A1:C4:0' header='yes' outcome='6'>
            <column datatype='string' name='Group' ordinal='0' />
            <column datatype='integer' name='Number of Runners' ordinal='1' />
            <column datatype='real' name='Percent' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Faster &amp; Slower than Avg]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C4:no:A1:C4:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[Faster &amp; Slower than Avg]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Faster &amp; Slower than Avg_03C2FC4776094C86BEE67313D6C96904]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Runners</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Runners]</local-name>
            <parent-name>[Faster &amp; Slower than Avg]</parent-name>
            <remote-alias>Number of Runners</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Faster &amp; Slower than Avg_03C2FC4776094C86BEE67313D6C96904]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent]</local-name>
            <parent-name>[Faster &amp; Slower than Avg]</parent-name>
            <remote-alias>Percent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Faster &amp; Slower than Avg_03C2FC4776094C86BEE67313D6C96904]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Faster &amp; Slower than Avg' datatype='table' name='[__tableau_internal_object_id__].[Faster &amp; Slower than Avg_03C2FC4776094C86BEE67313D6C96904]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Faster &amp; Slower than Avg' id='Faster &amp; Slower than Avg_03C2FC4776094C86BEE67313D6C96904'>
            <properties context=''>
              <relation connection='excel-direct.1gtr21b1a1ij3d15sm61n0gr3y7k' name='Faster &amp; Slower than Avg' table='[&apos;Faster &amp; Slower than Avg$&apos;]' type='table'>
                <columns gridOrigin='A1:C4:no:A1:C4:0' header='yes' outcome='6'>
                  <column datatype='string' name='Group' ordinal='0' />
                  <column datatype='integer' name='Number of Runners' ordinal='1' />
                  <column datatype='real' name='Percent' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='FS Duo Avg (US_Sub4_Milers)' inline='true' name='federated.0zokk4c1ib84z913ktdwe0klrdgc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='US_Sub4_Milers' name='excel-direct.15n2evm0ca8v1t1bqnol00h71fp8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ljcoo/NSS/Projects/United_States_Sub_4_Milers_Database/spreadsheets/US_Sub4_Milers.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15n2evm0ca8v1t1bqnol00h71fp8' name='FS Duo Avg' table='[&apos;FS Duo Avg$&apos;]' type='table'>
          <columns gridOrigin='A1:H7:no:A1:H7:0' header='yes' outcome='6'>
            <column datatype='string' name='Family' ordinal='0' />
            <column datatype='string' name='Avg First Sub-4 Mile Time' ordinal='1' />
            <column datatype='real' name='AFS4_Sec' ordinal='2' />
            <column datatype='string' name='Avg Mile PR' ordinal='3' />
            <column datatype='real' name='APR_Sec' ordinal='4' />
            <column datatype='string' name='Avg. Difference Between First and Fastest Mile' ordinal='5' />
            <column datatype='real' name='ADFF_Sec' ordinal='6' />
            <column datatype='integer' name='Days Between First Sub-4 Mile' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.15n2evm0ca8v1t1bqnol00h71fp8' name='FS Duo Avg' table='[&apos;FS Duo Avg$&apos;]' type='table'>
          <columns gridOrigin='A1:H7:no:A1:H7:0' header='yes' outcome='6'>
            <column datatype='string' name='Family' ordinal='0' />
            <column datatype='string' name='Avg First Sub-4 Mile Time' ordinal='1' />
            <column datatype='real' name='AFS4_Sec' ordinal='2' />
            <column datatype='string' name='Avg Mile PR' ordinal='3' />
            <column datatype='real' name='APR_Sec' ordinal='4' />
            <column datatype='string' name='Avg. Difference Between First and Fastest Mile' ordinal='5' />
            <column datatype='real' name='ADFF_Sec' ordinal='6' />
            <column datatype='integer' name='Days Between First Sub-4 Mile' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg First Sub-4 Mile Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Avg First Sub-4 Mile Time]</local-name>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias>Avg First Sub-4 Mile Time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AFS4_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AFS4_Sec]</local-name>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias>AFS4_Sec</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Mile PR</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Avg Mile PR]</local-name>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias>Avg Mile PR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APR_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[APR_Sec]</local-name>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias>APR_Sec</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Difference Between First and Fastest Mile</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Avg. Difference Between First and Fastest Mile]</local-name>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias>Avg. Difference Between First and Fastest Mile</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADFF_Sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ADFF_Sec]</local-name>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias>ADFF_Sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days Between First Sub-4 Mile</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days Between First Sub-4 Mile]</local-name>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias>Days Between First Sub-4 Mile</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FS Duo Avg]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H7:no:A1:H7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ADFF Sec' datatype='real' name='[ADFF_Sec]' role='measure' type='quantitative' />
      <column caption='AFS4 Sec' datatype='real' name='[AFS4_Sec]' role='measure' type='quantitative' />
      <column caption='APR Sec' datatype='real' name='[APR_Sec]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='FS Duo Avg' datatype='table' name='[__tableau_internal_object_id__].[FS Duo Avg_CF3A4A35FC864D85B0970F70C763D76D]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FS Duo Avg' id='FS Duo Avg_CF3A4A35FC864D85B0970F70C763D76D'>
            <properties context=''>
              <relation connection='excel-direct.15n2evm0ca8v1t1bqnol00h71fp8' name='FS Duo Avg' table='[&apos;FS Duo Avg$&apos;]' type='table'>
                <columns gridOrigin='A1:H7:no:A1:H7:0' header='yes' outcome='6'>
                  <column datatype='string' name='Family' ordinal='0' />
                  <column datatype='string' name='Avg First Sub-4 Mile Time' ordinal='1' />
                  <column datatype='real' name='AFS4_Sec' ordinal='2' />
                  <column datatype='string' name='Avg Mile PR' ordinal='3' />
                  <column datatype='real' name='APR_Sec' ordinal='4' />
                  <column datatype='string' name='Avg. Difference Between First and Fastest Mile' ordinal='5' />
                  <column datatype='real' name='ADFF_Sec' ordinal='6' />
                  <column datatype='integer' name='Days Between First Sub-4 Mile' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Difference Between First and Fastest Mile'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Avg Difference Between First and Fastest Mile (Sec)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FS Duo Avg (US_Sub4_Milers)' name='federated.0zokk4c1ib84z913ktdwe0klrdgc' />
          </datasources>
          <datasource-dependencies datasource='federated.0zokk4c1ib84z913ktdwe0klrdgc'>
            <column caption='ADFF Sec' datatype='real' name='[ADFF_Sec]' role='measure' type='quantitative' />
            <column datatype='string' name='[Family]' role='dimension' type='nominal' />
            <column-instance column='[Family]' derivation='None' name='[none:Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[ADFF_Sec]' derivation='Sum' name='[sum:ADFF_Sec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:ADFF_Sec:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:ADFF_Sec:qk]' />
              <text column='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:ADFF_Sec:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Family:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5783FFD0-5031-47A6-A464-EE8B05482787}' />
    </worksheet>
    <worksheet name='Average First Sub-4 Mile By Family'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Average First Sub-4 Mile By Family</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FS Duo Avg (US_Sub4_Milers)' name='federated.0zokk4c1ib84z913ktdwe0klrdgc' />
          </datasources>
          <datasource-dependencies datasource='federated.0zokk4c1ib84z913ktdwe0klrdgc'>
            <column caption='AFS4 Sec' datatype='real' name='[AFS4_Sec]' role='measure' type='quantitative' />
            <column datatype='string' name='[Avg First Sub-4 Mile Time]' role='dimension' type='nominal' />
            <column datatype='string' name='[Family]' role='dimension' type='nominal' />
            <column-instance column='[Avg First Sub-4 Mile Time]' derivation='None' name='[none:Avg First Sub-4 Mile Time:ok]' pivot='key' type='nominal' />
            <column-instance column='[Family]' derivation='None' name='[none:Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[AFS4_Sec]' derivation='Sum' name='[sum:AFS4_Sec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:AFS4_Sec:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Avg First Sub-4 Mile Time:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:AFS4_Sec:qk]</rows>
        <cols>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Family:nk]</cols>
      </table>
      <simple-id uuid='{92187D87-F263-4C6B-B6CD-F3EE0FBCC54F}' />
    </worksheet>
    <worksheet name='Average Mile PR By Family'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Average Mile PR By Family</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FS Duo Avg (US_Sub4_Milers)' name='federated.0zokk4c1ib84z913ktdwe0klrdgc' />
          </datasources>
          <datasource-dependencies datasource='federated.0zokk4c1ib84z913ktdwe0klrdgc'>
            <column caption='APR Sec' datatype='real' name='[APR_Sec]' role='measure' type='quantitative' />
            <column datatype='string' name='[Avg Mile PR]' role='dimension' type='nominal' />
            <column datatype='string' name='[Family]' role='dimension' type='nominal' />
            <column-instance column='[Avg Mile PR]' derivation='None' name='[none:Avg Mile PR:ok]' pivot='key' type='nominal' />
            <column-instance column='[Family]' derivation='None' name='[none:Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[APR_Sec]' derivation='Sum' name='[sum:APR_Sec:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Avg Mile PR:ok] / [federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Family:nk])</rows>
        <cols>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:APR_Sec:qk]</cols>
      </table>
      <simple-id uuid='{8631A441-5259-424A-8C64-66E5A671802E}' />
    </worksheet>
    <worksheet name='Average Sub-4 Mile Time By Decade'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Average Sub-4 Mile Time By Decade</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US Sub-4 Milers+ (US_Sub4_Milers)' name='federated.09niz0w1n99kag10kek2o06zr3b9' />
          </datasources>
          <datasource-dependencies datasource='federated.09niz0w1n99kag10kek2o06zr3b9'>
            <column datatype='string' name='[Average Sub-4 Mile Time (Sub-4 By Decade)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Decade (Sub-4 By Decade)]' role='dimension' type='nominal' />
            <column caption='Time Sec (Sub-4 By Decade)' datatype='real' name='[Time_Sec (Sub-4 By Decade)]' role='measure' type='quantitative' />
            <column-instance column='[Average Sub-4 Mile Time (Sub-4 By Decade)]' derivation='None' name='[none:Average Sub-4 Mile Time (Sub-4 By Decade):ok]' pivot='key' type='nominal' />
            <column-instance column='[Decade (Sub-4 By Decade)]' derivation='None' name='[none:Decade (Sub-4 By Decade):nk]' pivot='key' type='nominal' />
            <column-instance column='[Time_Sec (Sub-4 By Decade)]' derivation='Sum' name='[sum:Time_Sec (Sub-4 By Decade):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.09niz0w1n99kag10kek2o06zr3b9].[sum:Time_Sec (Sub-4 By Decade):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Decade (Sub-4 By Decade):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09niz0w1n99kag10kek2o06zr3b9].[sum:Time_Sec (Sub-4 By Decade):qk]</rows>
        <cols>([federated.09niz0w1n99kag10kek2o06zr3b9].[none:Average Sub-4 Mile Time (Sub-4 By Decade):ok] / [federated.09niz0w1n99kag10kek2o06zr3b9].[none:Decade (Sub-4 By Decade):nk])</cols>
      </table>
      <simple-id uuid='{5BB26854-5B77-4E3C-B7F1-80238F68ECA5}' />
    </worksheet>
    <worksheet name='Average Sub-4 Mile Time By Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Average Sub-4 Mile Time By Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US Sub-4 Milers+ (US_Sub4_Milers)' name='federated.09niz0w1n99kag10kek2o06zr3b9' />
          </datasources>
          <datasource-dependencies datasource='federated.09niz0w1n99kag10kek2o06zr3b9'>
            <column datatype='string' name='[Average Sub-4 Mile Time]' role='dimension' type='nominal' />
            <column caption='Time Sec (Sub-4 By Year)' datatype='real' name='[Time_Sec (Sub-4 By Year)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year (Sub-4 By Year)]' role='dimension' type='nominal' />
            <column-instance column='[Average Sub-4 Mile Time]' derivation='None' name='[none:Average Sub-4 Mile Time:ok]' pivot='key' type='nominal' />
            <column-instance column='[Year (Sub-4 By Year)]' derivation='None' name='[none:Year (Sub-4 By Year):ok]' pivot='key' type='nominal' />
            <column-instance column='[Time_Sec (Sub-4 By Year)]' derivation='Sum' name='[sum:Time_Sec (Sub-4 By Year):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.09niz0w1n99kag10kek2o06zr3b9].[sum:Time_Sec (Sub-4 By Year):qk]' />
              <text column='[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Average Sub-4 Mile Time:ok]' />
              <text column='[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Year (Sub-4 By Year):ok]' />
              <color column='[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Average Sub-4 Mile Time:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{19E251D9-FB1E-4221-9921-9BE42EF0C447}' />
    </worksheet>
    <worksheet name='Days Between First Sub-4 Mile By Family'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Days Between First Sub-4 Mile By Family</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FS Duo Avg (US_Sub4_Milers)' name='federated.0zokk4c1ib84z913ktdwe0klrdgc' />
          </datasources>
          <datasource-dependencies datasource='federated.0zokk4c1ib84z913ktdwe0klrdgc'>
            <column datatype='integer' name='[Days Between First Sub-4 Mile]' role='measure' type='quantitative' />
            <column datatype='string' name='[Family]' role='dimension' type='nominal' />
            <column-instance column='[Family]' derivation='None' name='[none:Family:nk]' pivot='key' type='nominal' />
            <column-instance column='[Days Between First Sub-4 Mile]' derivation='Sum' name='[sum:Days Between First Sub-4 Mile:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:Days Between First Sub-4 Mile:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:Days Between First Sub-4 Mile:qk]' />
              <text column='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:Days Between First Sub-4 Mile:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Family:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{FEEBB20C-2608-48A9-968B-BB8156F58FFC}' />
    </worksheet>
    <worksheet name='Faster &amp; Slower than Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Faster &amp; Slower than Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Faster &amp; Slower than Avg (US_Sub4_Milers)' name='federated.0sl74t80sf9p1g1cx84ah1h2zl8h' />
          </datasources>
          <datasource-dependencies datasource='federated.0sl74t80sf9p1g1cx84ah1h2zl8h'>
            <column datatype='string' name='[Group]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Runners]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percent]' role='measure' type='quantitative' />
            <column-instance column='[Group]' derivation='None' name='[none:Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Runners]' derivation='Sum' name='[sum:Number of Runners:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent]' derivation='Sum' name='[sum:Percent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[sum:Percent:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[sum:Number of Runners:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[sum:Percent:qk]' z-order='2' />
            <reference-line axis-column='[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[sum:Number of Runners:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[sum:Percent:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[none:Group:nk]</rows>
        <cols>[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[sum:Number of Runners:qk]</cols>
      </table>
      <simple-id uuid='{FF87E483-560A-46A5-8732-B9E196DD7D2F}' />
    </worksheet>
    <worksheet name='Location of Sub-4 Miles Run By Americans'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Location of Sub-4 Miles Run By Americans</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US Sub-4 Milers+ (US_Sub4_Milers)' name='federated.09niz0w1n99kag10kek2o06zr3b9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09niz0w1n99kag10kek2o06zr3b9'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
                <semantic-value key='&quot;Ames&quot;' value='42.030799999999999' />
                <semantic-value key='&quot;Annapolis&quot;' value='38.978400000000001' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Bakersfield&quot;' value='35.3733' />
                <semantic-value key='&quot;Beaverton&quot;' value='45.486899999999999' />
                <semantic-value key='&quot;Belfast&quot;' value='54.597299999999997' />
                <semantic-value key='&quot;Berkeley&quot;' value='37.871499999999997' />
                <semantic-value key='&quot;Berlin&quot;' value='52.520000000000003' />
                <semantic-value key='&quot;Bern&quot;' value='46.948' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
                <semantic-value key='&quot;Blacksburg&quot;' value='37.229599999999998' />
                <semantic-value key='&quot;Bloomington&quot;' value='39.165300000000002' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Bowling Green&quot;' value='36.968499999999999' />
                <semantic-value key='&quot;Brasschaat&quot;' value='51.290100000000002' />
                <semantic-value key='&quot;Brunswick&quot;' value='43.914000000000001' />
                <semantic-value key='&quot;Burnaby&quot;' value='49.248800000000003' />
                <semantic-value key='&quot;Cambridge&quot;' value='42.373600000000003' />
                <semantic-value key='&quot;Carbondale&quot;' value='37.7273' />
                <semantic-value key='&quot;Charlottesville&quot;' value='38.029299999999999' />
                <semantic-value key='&quot;Chico&quot;' value='39.728499999999997' />
                <semantic-value key='&quot;Columbia&quot;' value='34.000700000000002' />
                <semantic-value key='&quot;Compton&quot;' value='33.895800000000001' />
                <semantic-value key='&quot;Concord&quot;' value='42.4604' />
                <semantic-value key='&quot;Cork&quot;' value='51.898499999999999' />
                <semantic-value key='&quot;Corvallis&quot;' value='44.564599999999999' />
                <semantic-value key='&quot;Dedham&quot;' value='42.243600000000001' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
                <semantic-value key='&quot;Falmouth&quot;' value='41.553199999999997' />
                <semantic-value key='&quot;Fargo&quot;' value='46.877200000000002' />
                <semantic-value key='&quot;Fayetteville&quot;' value='36.0627' />
                <semantic-value key='&quot;Fresno&quot;' value='36.7378' />
                <semantic-value key='&quot;Gainesville&quot;' value='29.651599999999998' />
                <semantic-value key='&quot;Gateshead&quot;' value='54.9527' />
                <semantic-value key='&quot;Geneva&quot;' value='41.805100000000003' />
                <semantic-value key='&quot;Greenville&quot;' value='34.852600000000002' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Inglewood&quot;' value='33.9617' />
                <semantic-value key='&quot;Johnson City&quot;' value='36.313400000000001' />
                <semantic-value key='&quot;Lawrence&quot;' value='38.971699999999998' />
                <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
                <semantic-value key='&quot;Lincoln&quot;' value='40.813600000000001' />
                <semantic-value key='&quot;London&quot;' value='51.507199999999997' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Luxembourg&quot;' value='49.815300000000001' />
                <semantic-value key='&quot;Lynchburg&quot;' value='37.413800000000002' />
                <semantic-value key='&quot;Madison&quot;' value='43.072200000000002' />
                <semantic-value key='&quot;Marion&quot;' value='40.558399999999999' />
                <semantic-value key='&quot;Modesto&quot;' value='37.639299999999999' />
                <semantic-value key='&quot;Murfreesboro&quot;' value='35.845599999999997' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;New Haven&quot;' value='41.308300000000003' />
                <semantic-value key='&quot;Nice&quot;' value='43.7102' />
                <semantic-value key='&quot;Oslo&quot;' value='59.913899999999998' />
                <semantic-value key='&quot;Oxford&quot;' value='51.752000000000002' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Portland&quot;' value='45.5152' />
                <semantic-value key='&quot;Princeton&quot;' value='40.357300000000002' />
                <semantic-value key='&quot;Providence&quot;' value='41.823999999999998' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Rieti&quot;' value='42.404499999999999' />
                <semantic-value key='&quot;Roanoke&quot;' value='37.271000000000001' />
                <semantic-value key='&quot;Saline&quot;' value='42.166699999999999' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San José&quot;' value='37.338700000000003' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
                <semantic-value key='&quot;Springfield&quot;' value='39.930700000000002' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627000000000002' />
                <semantic-value key='&quot;Stanford&quot;' value='37.424100000000003' />
                <semantic-value key='&quot;Stockholm&quot;' value='59.329300000000003' />
                <semantic-value key='&quot;Stockton&quot;' value='37.957700000000003' />
                <semantic-value key='&quot;Tillsonburg&quot;' value='42.865900000000003' />
                <semantic-value key='&quot;Toledo&quot;' value='41.652799999999999' />
                <semantic-value key='&quot;University Park&quot;' value='40.814799999999998' />
                <semantic-value key='&quot;Vancouver&quot;' value='49.282699999999998' />
                <semantic-value key='&quot;Villeneuve-d’Ascq&quot;' value='50.6233' />
                <semantic-value key='&quot;Walnut&quot;' value='34.020299999999999' />
                <semantic-value key='&quot;Wanganui&quot;' value='-39.933100000000003' />
                <semantic-value key='&quot;Warwick&quot;' value='41.700099999999999' />
                <semantic-value key='&quot;West Chester&quot;' value='39.960700000000003' />
                <semantic-value key='&quot;Westwood&quot;' value='34.063499999999998' />
                <semantic-value key='&quot;Woodland Hills&quot;' value='34.165399999999998' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
                <semantic-value key='&quot;Ames&quot;' value='-93.631900000000002' />
                <semantic-value key='&quot;Annapolis&quot;' value='-76.492199999999997' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Bakersfield&quot;' value='-119.0187' />
                <semantic-value key='&quot;Beaverton&quot;' value='-122.804' />
                <semantic-value key='&quot;Belfast&quot;' value='-5.9301000000000004' />
                <semantic-value key='&quot;Berkeley&quot;' value='-122.273' />
                <semantic-value key='&quot;Berlin&quot;' value='13.404999999999999' />
                <semantic-value key='&quot;Bern&quot;' value='7.4474' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
                <semantic-value key='&quot;Blacksburg&quot;' value='-80.413899999999998' />
                <semantic-value key='&quot;Bloomington&quot;' value='-86.526399999999995' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Bowling Green&quot;' value='-86.480800000000002' />
                <semantic-value key='&quot;Brasschaat&quot;' value='4.4916' />
                <semantic-value key='&quot;Brunswick&quot;' value='-69.966999999999999' />
                <semantic-value key='&quot;Burnaby&quot;' value='-122.98050000000001' />
                <semantic-value key='&quot;Cambridge&quot;' value='-71.109700000000004' />
                <semantic-value key='&quot;Carbondale&quot;' value='-89.216800000000006' />
                <semantic-value key='&quot;Charlottesville&quot;' value='-78.476699999999994' />
                <semantic-value key='&quot;Chico&quot;' value='-121.83750000000001' />
                <semantic-value key='&quot;Columbia&quot;' value='-81.034800000000004' />
                <semantic-value key='&quot;Compton&quot;' value='-118.2201' />
                <semantic-value key='&quot;Concord&quot;' value='-71.3489' />
                <semantic-value key='&quot;Cork&quot;' value='-8.4756' />
                <semantic-value key='&quot;Corvallis&quot;' value='-123.262' />
                <semantic-value key='&quot;Dedham&quot;' value='-71.167699999999996' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
                <semantic-value key='&quot;Falmouth&quot;' value='-70.608599999999996' />
                <semantic-value key='&quot;Fargo&quot;' value='-96.7898' />
                <semantic-value key='&quot;Fayetteville&quot;' value='-94.160600000000002' />
                <semantic-value key='&quot;Fresno&quot;' value='-119.7871' />
                <semantic-value key='&quot;Gainesville&quot;' value='-82.324799999999996' />
                <semantic-value key='&quot;Gateshead&quot;' value='-1.6033999999999999' />
                <semantic-value key='&quot;Geneva&quot;' value='-80.948099999999997' />
                <semantic-value key='&quot;Greenville&quot;' value='-82.394000000000005' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Inglewood&quot;' value='-118.3531' />
                <semantic-value key='&quot;Johnson City&quot;' value='-82.353499999999997' />
                <semantic-value key='&quot;Lawrence&quot;' value='-95.235299999999995' />
                <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
                <semantic-value key='&quot;Lincoln&quot;' value='-96.702600000000004' />
                <semantic-value key='&quot;London&quot;' value='-0.12759999999999999' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Luxembourg&quot;' value='6.1295999999999999' />
                <semantic-value key='&quot;Lynchburg&quot;' value='-79.142200000000003' />
                <semantic-value key='&quot;Madison&quot;' value='-89.400800000000004' />
                <semantic-value key='&quot;Marion&quot;' value='-85.659099999999995' />
                <semantic-value key='&quot;Modesto&quot;' value='-120.997' />
                <semantic-value key='&quot;Murfreesboro&quot;' value='-86.390299999999996' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;New Haven&quot;' value='-72.927899999999994' />
                <semantic-value key='&quot;Nice&quot;' value='7.2619999999999996' />
                <semantic-value key='&quot;Oslo&quot;' value='10.7522' />
                <semantic-value key='&quot;Oxford&quot;' value='-1.2577' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Portland&quot;' value='-122.6784' />
                <semantic-value key='&quot;Princeton&quot;' value='-74.667199999999994' />
                <semantic-value key='&quot;Providence&quot;' value='-71.412800000000004' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Rieti&quot;' value='12.8567' />
                <semantic-value key='&quot;Roanoke&quot;' value='-79.941400000000002' />
                <semantic-value key='&quot;Saline&quot;' value='-83.781599999999997' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San José&quot;' value='-121.8853' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
                <semantic-value key='&quot;Springfield&quot;' value='-75.3202' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199399999999997' />
                <semantic-value key='&quot;Stanford&quot;' value='-122.1661' />
                <semantic-value key='&quot;Stockholm&quot;' value='18.0686' />
                <semantic-value key='&quot;Stockton&quot;' value='-121.2908' />
                <semantic-value key='&quot;Tillsonburg&quot;' value='-80.7333' />
                <semantic-value key='&quot;Toledo&quot;' value='-83.537899999999993' />
                <semantic-value key='&quot;University Park&quot;' value='-77.865300000000005' />
                <semantic-value key='&quot;Vancouver&quot;' value='-123.1207' />
                <semantic-value key='&quot;Villeneuve-d’Ascq&quot;' value='3.1442999999999999' />
                <semantic-value key='&quot;Walnut&quot;' value='-117.8653' />
                <semantic-value key='&quot;Wanganui&quot;' value='175.02860000000001' />
                <semantic-value key='&quot;Warwick&quot;' value='-71.416200000000003' />
                <semantic-value key='&quot;West Chester&quot;' value='-75.605500000000006' />
                <semantic-value key='&quot;Westwood&quot;' value='-118.4455' />
                <semantic-value key='&quot;Woodland Hills&quot;' value='-118.60899999999999' />
              </semantic-values>
            </column>
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09niz0w1n99kag10kek2o06zr3b9].[Longitude (generated)]' field-type='quantitative' max='-44748996.087125666' min='-54563692.145437956' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09niz0w1n99kag10kek2o06zr3b9].[Latitude (generated)]' field-type='quantitative' max='8153864.9537365539' min='2392617.7707755212' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09niz0w1n99kag10kek2o06zr3b9].[Latitude (generated)]</rows>
        <cols>[federated.09niz0w1n99kag10kek2o06zr3b9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{ADB5A4DC-3B97-43BB-9078-7A356614A20C}' />
    </worksheet>
    <worksheet name='Number of Sub-4 Miles By Decade'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Number of Sub-4 Miles By Decade</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US Sub-4 Milers+ (US_Sub4_Milers)' name='federated.09niz0w1n99kag10kek2o06zr3b9' />
          </datasources>
          <datasource-dependencies datasource='federated.09niz0w1n99kag10kek2o06zr3b9'>
            <column datatype='string' name='[Decade (Sub-4 By Decade)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sub-4 Miles]' role='measure' type='quantitative' />
            <column-instance column='[Decade (Sub-4 By Decade)]' derivation='None' name='[none:Decade (Sub-4 By Decade):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-4 Miles]' derivation='Sum' name='[sum:Sub-4 Miles:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Decade (Sub-4 By Decade):nk]</rows>
        <cols>[federated.09niz0w1n99kag10kek2o06zr3b9].[sum:Sub-4 Miles:qk]</cols>
      </table>
      <simple-id uuid='{5E3FD1BF-0EFD-4C1B-9BCC-32341FFC097A}' />
    </worksheet>
    <worksheet name='Number of Sub-4 Miles By Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Number of Sub-4 Miles By Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US Sub-4 Milers+ (US_Sub4_Milers)' name='federated.09niz0w1n99kag10kek2o06zr3b9' />
          </datasources>
          <datasource-dependencies datasource='federated.09niz0w1n99kag10kek2o06zr3b9'>
            <column datatype='integer' name='[Sub-4 Milers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year (Sub-4 By Year)]' role='dimension' type='nominal' />
            <column-instance column='[Year (Sub-4 By Year)]' derivation='None' name='[none:Year (Sub-4 By Year):ok]' pivot='key' type='nominal' />
            <column-instance column='[Sub-4 Milers]' derivation='Sum' name='[sum:Sub-4 Milers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.09niz0w1n99kag10kek2o06zr3b9].[sum:Sub-4 Milers:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Year (Sub-4 By Year):ok]' />
            </encodings>
            <reference-line axis-column='[federated.09niz0w1n99kag10kek2o06zr3b9].[sum:Sub-4 Milers:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.09niz0w1n99kag10kek2o06zr3b9].[sum:Sub-4 Milers:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09niz0w1n99kag10kek2o06zr3b9].[sum:Sub-4 Milers:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{F221F1E2-A50F-4243-B8F3-CDE5CD5CE600}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='Location of Sub-4 Miles Run By Americans'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D63BB408-062E-4917-B2A1-4B63BCFEF641}' />
    </window>
    <window class='worksheet' name='Average Sub-4 Mile Time By Decade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Decade (Sub-4 By Decade):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Average Sub-4 Mile Time (Sub-4 By Decade):ok]</field>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Decade (Sub-4 By Decade):nk]</field>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Decade (Sub-4 By Year):nk]</field>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Decade:nk]</field>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:State:nk]</field>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[yr:Average Sub-4 Mile Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE3A782A-C5D4-45AD-B7DE-21007B836480}' />
    </window>
    <window class='worksheet' name='Number of Sub-4 Miles By Decade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Decade (Sub-4 By Decade):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB866DA2-72A8-4538-9C3F-7D082A336D61}' />
    </window>
    <window class='worksheet' name='Average Sub-4 Mile Time By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Average Sub-4 Mile Time:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Average Sub-4 Mile Time:ok]</field>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Year (Sub-4 By Year):ok]</field>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Year (Sub-4 By Year):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCC5B755-469D-40C2-AEC4-0D4FF66A25E3}' />
    </window>
    <window class='worksheet' name='Number of Sub-4 Miles By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09niz0w1n99kag10kek2o06zr3b9].[none:Year (Sub-4 By Year):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57041862-5E4D-477D-A949-3A1760835465}' />
    </window>
    <window class='worksheet' name='Average First Sub-4 Mile By Family'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Avg First Sub-4 Mile Time:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Avg First Sub-4 Mile Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4C1BD34-5AC9-4296-9583-3D44FF90B80A}' />
    </window>
    <window class='worksheet' name='Average Mile PR By Family'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Avg Mile PR:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C47260C-3DA7-413E-95C6-EE8AF1DCF315}' />
    </window>
    <window class='worksheet' name='Average Difference Between First and Fastest Mile'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:ADFF_Sec:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[none:Family:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEC30F7D-7546-44A2-8F2D-E8F9B1D7A6CF}' />
    </window>
    <window class='worksheet' name='Days Between First Sub-4 Mile By Family'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:Days Between First Sub-4 Mile:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zokk4c1ib84z913ktdwe0klrdgc].[sum:Days Between First Sub-4 Mile:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F53DB101-AB2A-4D9E-829D-B99F0F0CC7E9}' />
    </window>
    <window class='worksheet' maximized='true' name='Faster &amp; Slower than Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[:Measure Names]</field>
            <field>[federated.0sl74t80sf9p1g1cx84ah1h2zl8h].[none:Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B46087BC-12F0-4332-B413-130921C72784}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='150' name='Average Difference Between First and Fastest Mile' width='164'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Average First Sub-4 Mile By Family' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Mile PR By Family' width='192'>
      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
      IOiaCICga/8HiBqmY5HEyKwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Sub-4 Mile Time By Decade' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAfXklEQVR4nO3dWXBc14He8f/tvdGNtbGD2HdiIbiaWihKsj22pZnSzNiO7aqxk0wWj5Nx
      JVOpPMfzkJdMqvKQt7y4UmN7JrYkS7J27hRFgiBAAI0dxL6jG+h977vkARRJCAQoNkAaRJ9f
      FarQ2+lzuu/X95577zlX0jRNQxDSkCRJku6PXQlB+GN6agGQZflpvZUgfGVPLQCBQOBpvZUg
      fGVPfRPo+vn3mFuP7Fl5cizE55fPc/VGN3HlgQcibm6Pzm95vntmmE+v9W7cSPp4652PSSgq
      a4vjvH+hk+WJIWZdHnr7Bra8dmKgm7ff/B0fX7jC9NgQUyv+R9ZP0xSunvsIT8DP5fOfcO2W
      E1m93+0KuWYZW1jf8rqF8T4udw0CEAu5+MPb7/LxJ+dwB2KbnpcIrvH+e+9w8eoNQvGvvpYd
      6L1N8oHbU84bDM2sbXpOMjDHlVvjd2/JXProPT49f4kVT+grv49rZoQFT3TL/bPDt3BOLDLQ
      /TnnLl7BG0488KjM7V7nltfIMR9vv/U+ibvd1qufvsvHH3/M4OTilufOjdzmDx9+TM/gHZQd
      urlPNQBazMXo+DTXbjhxz02y7IswPzGM2+PhyoVzjEwvMzU4yOhoH9MLy1y9cI6u/nGSsRDX
      Ll/g6uc9JOQYN65coHdkGk3TmOy5jD+jiuOtdSQCK4zPrLJ4x8n6mouPz1/m4tVO4rIKgJoI
      ceX6bcbGRzcqlPDRe/VzJtwRxkZ66ezsR45HCEcj3OruJRn1b9RrZhlNg7q2E0jRdY6fPouV
      OMFwmO6u61z49FOGhgb47GY/yXiY61cu0j82iwZE3FO4lRxmr/0eXfkp2hsr8C9PsrAWZmrU
      yer8NOcvXeXKjV6+yIUS93Oj+zbDQxsLXyy4QkRXwInqDM591oVzcIK5O6P4YzLxoBu/lENb
      hZ3ff3AZ3+os5z49x4ovinthgvMXruINeLl26Tw3bo8gJyJ8fvk8v3/3E+JKnJufXaR7cILK
      phZ6rl1Gvf9t0X+zj5rm2ru3ZcbmPZx9rp333nybcNjHlQvnGJ1ZJh5c48K5T1lweem+foVL
      17qIyzKDPdf54P33mF2LMNbfxaXPu0koGmgJOnunKM+K0Tm2ztnnT2BEZWBoiKh3kTsLq1y7
      dIFLFy/eC7ymaVy/cIE709PE735O4zPLvPLK17h6/iKjzn7iqsLg4DAAM0MD1J46S3jqJn1T
      a0wO3+bS1U6iyfstBDDs/WK+vem+TopPvs5c1wW01q/R2eMltjBEtjnBipTPtb53aM8B3eHj
      nHZIyKrK+XffJnCihqz6lxm++Ba2+B26Zo0EO9+msfY/U9l+mpFPLvDRcjYvtObRN66nNHKL
      vMNnsDlKKWKFK7cGMMQCWOR1Sho7WO65jaJq6IGGI4eZHBjGpBrJMesJr63iVnMAuPrO/2Pe
      VEznW29T93f/EaN0vy1Rn4slzcxU3whvnCqhJ5xFcuIS19dGGVmHQGc/1f/l73DPTlBUfZKm
      omre//gjzk8U05jtx51lJzhwnUM1jeQfqkO3fIvukSy8bjdm/wwNx07h+mwI9W4qJod6iLn1
      tL36Xdb7PmYsrudPqxvY+M2XyC+rInK+h3/+1S1K6+v4/R8+whBZ469+8hOUZBhZUbj63tvE
      15vRlT5HVckdJjs/5PPRBAnvbWqq/xNWOUhIgSw9aEqShYiOE3b9pu/QbHOQo4/y4Tu/JWQo
      4Fr/O9Q5jHz9u3+FTUown1To7zyPyZRgdlnlaHMVgcAMv/7gCpXZSWwldZwqDJOwFpKdd4i6
      vAHefOcDXv7mt+ns7KT0xQb6ljPQmWwcayrh3U+vUJtvpLAoj7l4FkUZyyRlGUxGgu55PvjD
      RzjKq4m47tAzZGV2bJrW1sN3a6ujob6Sq4O3mRh2UuEwcT2zhK8frbzXnqe3BtA0useXsYQX
      UZNhYllVBO98ji6/igyjjtbjZ/jZv/4BYKLjxDGWBzvRlzRSXpCNnFTQNJV4LImk01HTcoy/
      /elfYzZIRCIxXvr2G1gj8yz4EijJBIFgEACjwUg4Eiev8BCvvnKG4vIqFP8iy0uL+KMbGwCG
      zAoS859hKqzbUmVJJ9Fy/EX+/V//CL205WEATGYLJpMBi8WC0aBHQkd92yl+9tN/iUUHVquV
      aCSCPxTnO3/xfWLLY/gTKslEjGAoAkgYDHrCMYWC0kq+dfY0pdV1+BenWVpeJpzYWMRrW47z
      xmuncd4epbi1DrKqsBq++Po0FieGyS6pQm+2ceYbb/CD18+iAxRFZXagk3h2NdXFuRufJRqx
      WAKdTqKyqYOf/fTfkmnWIaPDdLfIkGsC+0M+k4hvCR9Z5Jr1tJ44w8/+1Q8w6iWSikpoeYxx
      n4HWukPIsoymQSwWB0lHbnEFP/6bn9NUlAFGMySiJBMR6o+c4cW6LK4PzKKqGsFgEE0DvcFI
      IhLBkpnDCy+/SqHDQUW+mfmlJZZWPABkFpTzp2+8wdrMME2nnqfz3V9R23H6gUVOod85QUN9
      OZmOMr73k3/H8eochkZGcc/fAUD/i1/84hePtSCnKBKN4ig6xNGODhprypBM2ZQVZFPb1EJz
      2xEWR7qJ6mzU1laSm5dLUUkpi1OTNLS109DYyOLEENPLHt744U+IzQ/gjkiUFeejlzT6u7vI
      rz/O0ZZm4t458ioOU15RiSnpRZdXw/GmciQJcvOLqayopLKqirIiB+iMZGVlUV52iMraGkoL
      8ymtqCA3z0FpUQHHnnuBuYEuorpMihzZSBJkZueQm5eH1WYjz+HgUHEBBUVlZGfnUFzooPno
      SXyzQ3hiBsqKHGTk5NJ9/SZH2+rout5JzdEXONLaimt2jMrGNiqra4ivL5Bff5zGslwAHEWl
      VFZu1LOkIBedwYxnaYqlgJ5vf/MFZiY91HUcIS/DgM5gxrcyQ8RQwDdfOklLUzVdN7vIKijn
      eGs1Pf2jNB89gXdxmprD7bQdO8napJPS+lbaTr6IujrKckAhVx9gJmCmvaECgM6r1+h48UWs
      95IvIcX8TK1EeO31P6Gu6TDzwz3EdHZeeuEU/V03ya1uxxpbJbe8kfqmVjLldRRbEfUNLdTn
      6+gfW6Cishyj2c7KxG2yK5pxTw/gUnL5xvPt5JpVgrpc6msqKc81M+NRePXMSQw6CYste+Mz
      qaykuqocvSShSwYZGpvjzNf/hLzsLEbG5/jWN15AL4E108b4gJO6Ey9zuLaS8jwDvUPTlB4q
      IxgMYDfr+If/9b//XnpaB8I8Hg95eXkpvTbic3Gzp5+y+nYaKor2uGb3KcpGL1qv1z/imV9d
      MpnEuzyHtbiGTNM2q5HHoGkaU3cGqalvRZJ2X94XluenySqswGbWg6YyO7dIZWV5yuUlk0mM
      RuO2j8dDHlwhKC9ObZn4spXpMSLmfGpKHV/5NZIkSc9EAJ6WSCSCJElYrdY9K/NZaPeT8Cy0
      W5Ik6al2gh+Ha2GKOVeQ5pYWfEuTLK0FKKtupDQ/CwBn93ViqpmmtlbW5u7gCck0trSQadn4
      1ZGjXpx33Bxtb+Bxfyf97kXGZ1eobWxBDa0yvbBKfmk1VWUFSMD4YA++iEpVQzOyb4lFd4Ca
      plYcmRbQVBam7+AKJGm51xnbe7Ggh6GxSYorG8g2xBibnMOaXURzfQUSsDA5wtJ6kKLyWjJ1
      ESZnVyipquNQYS5KIkRf3zCKmsRR3kxt2R9/QQ17VxmemKOyvgVTwsvE7CLZheXUVZYgAVOj
      /awFEhyqacQQW2N2aZ2K+maKcu1oSpLx0SFCST0tLS1YjF+9a7tPT4VIMLfkp62+mPHJBRwl
      FRxprWd+Zpb15RUSWohAxEBDUyN2QqxGjDSW5zEzvwKApqkMj0wRjQR4/NWbwuTMCkfampia
      mMSeW8TRjiOszs0Q9KwRjIVZ9yWprW8g325kxhXkaHsTE+NjAES9yywGFCrKS9Hr9m4T5csm
      J6ZoajvCyswkhoxs2js6CLuWiEUDuHxhVtxeqmrqKCvKY3JmkfaONhZmJgHQm+wcP3WS0rws
      bJn2J1bHr05lfHKejqMdzE6MYcl20NHRgWdxnnDAizcUxu2JUFNXR7Ejk6mFVTo6WpiZ2OjI
      RgNrRKVsqvMNTC89+tjMg/ZpAGIYTTmY7dnoE3HUWICbXb3Y8xxk5uVi0MxUVBQwO9rPrF9F
      Cq3QPzpDdk42AGuz40hZhaiJKElZecR7fZmM3mjDZLJgkjSMWpyumzcx2HPIyMzCajRTVVWK
      a2GSkVkXVi3Kre7bZOUVAxD0+VAUheXZSRbdj/dlPA5NMmExmbAb9Wg6GOq7RVRnxmTKIMdm
      oaq6koBnldvOUXIy9HR392DMyL3/elXBFVIoytx+O/3pUdEZrBgNRqwGHXpkbvd0oVrsWDLs
      2C1mqqoO4VldoH9kGrtB41b3bTKyCwAwWe0E3XMMTa7gyM14rHfepwGwkYiu4l5aRLJlEIrr
      OH78GL7VJWLhMIlYBJ01m7wsK2HfGmQW09pYicu1hizLGGxZmJQIPp+PyGMcHd1gQk348HjW
      SEgGvME4HcdOIAfcRCJR4rEYis5EQV4O8WiYiGrkyJF2PK5FFFkm2+FAQk9+XhaKoj767VJk
      lBK4PR68CZVYMERtcwdZWphALEEkniSWUCgqKkCRE6wHYrS3txMJrKEqMqqmsTY7Rl5lw552
      pFOnh2QIr99LWJYIBiO0tB/DEPUSjsaIxhMkVR1FBQ6SyTj+qMyR9jb8nhUURSbsX8deUEFT
      bRmrK1uPqu9Ie0rW19cf6/kR/5o2emdakxVVW1ue05wDQ1ogEr/7qKotTI1rd2YWNUVVNffS
      rDY8NqklZEVzudz3yvB6vZr6GO8ZDoe1SCSiJaIBbXhkTIvJqhZYX9GcTqe25o/ce2/X4ow2
      Mj6lJVVV868vawODI1o0oWjray4tqaiaZ3VBG5+a1xT18dv9ValyXBsbGdECkYQWDXq1wQGn
      trDquVdH//qyNjA0qkWTysbjg0OaLxTTQr41LRxXNK/X+0Tq9YXHbbeSiGjDQ8NaJKFoIZ9b
      GxhwaquewN1HVW19ZV4bHLmjJRR14/HBYS0US2q+dbcWT8ra8uykNjoxqymP8YUD3NsLJMsy
      wbsHkJ6EUCiE3b4ftje3l0hsnI9iMpn2rMxnod1PwrPQ7ry8vPt7gfR6PdnZ2U/szRRFeaLl
      74VodOOkrb3cDfostPtJeFbafS8AkiQ90e1BnU6HTrdPuxx3ffEZ7GU9n4V2PwnPSrv3fw0F
      4QkSARDSmgiAkNZEAIS0JgIgpDURACGtiQAIaS3lAKhKkvHhfrpu9RCIyYBG781OwgkF1/wk
      Xbd68G0a6S8I+88u1gASZVX1HK7JZX7eg2tmDG9EJqHEmF8JcrS1hqmpub2rqSA8ASkPiNHp
      9cR8LqZdEdqaCrhxc51Mo4Y/6MNgzMRoycCgrKCqKqqqoigKyWTy0QX/EcmyjCRJe1rPZ6Hd
      T8Kz0u6UA5CM+BmdddPSXI+mSlRVlrEwNUEiaUCOu1maVyEj894hcb1ef2+MaDAeI9WBmEa9
      HuuXx5qqKsTiqTYFTEYwGEgmk0iShNFoZNYzzeDy1smZvqqzda9iN2duanf36BIL7tRmyDMb
      9XzndP2m+9TQKvLYxynX0VBzFl1u1ab75NAoyeBwymVaCl9D0ls2tTvS1YXscqdUns5mw/7K
      y1vun7oxgpri6eZZRbkU1pcCu1kDGM0UO7JxuVwUllZQVVVFUUE+BksGaq6VJXeAw3VlD33t
      //zsMjE5tV+Ho6WH+GH70c13+gLwTuoLAi+chMbaTXeNu0f5dc8vUy6y49Bx7ObMTfdd7pvh
      M2dqm4VZGeatAfAvEL/6DynXUcos3hKAZKCP6ML/TblMs+NlJL1l032hC5eI9fenVJ6huOih
      ARj+tBclkdp8sxXH63YfAL3RSm1Dw6b7rLa7p79mZFFdmZVq0YLw1IjdoEJaEwEQ0poIgJDW
      RACEtCYCIKQ1EQAhrYkACGlNBEBIayIAQloTARDSmgiAkNZEAIS0JgIgpDURACGtiQAIaS3l
      AGiaxurCFL3OEZKqhnd1np7eAWJJhbDPTf/ACAn5yV0gQhD2QuqzQsgJFIOdhkNWhsdXCCcl
      2hsLGBiaZnh0mtpDOQyOi0Hxwv62ixFhZnIzdDhHXLQcPYFZCdHnHKa2tYH5OxL2HAeG2clt
      BsWnfmVWTVW3DLaWFDn1hrAxgFtNJjcNiv/imsGpkmX5Xjlf1FfbxRVpNbQt7VYf+/pnmymK
      Al8uc5eXddr4DL/c7tTL1DQePrh+Fxf3VR9YhlJebpREhOGJRY6dOIFBB7f7R2k7dhKLUWMq
      PkU0mIlsMD90UDyPfeHS+ySdbusFmPW7u9qrXq9HbzRuGhS/24tlGwyGe+V8Ud/dXH9BQtrS
      btmwuzpu/k7ulqnfXbfQYDCg29Lu1MuUJB5+we1dXMpC98AylPomkJpEiUfo7enB5fOjJWWc
      vT0srIaorylhZGqVpvqK1GspCE9Byj+dRks2p5577t7toueff+DRHI4VPHxGCEHYT8RuUCGt
      iQAIaU0EQEhrIgBCWhMBENKaCICQ1kQAhLQmAiCkNREAIa2JAAhpTQRASGsiAEJaEwEQ0poI
      gJDWRACEtLaLAGhEgj5W3euoGsSjIdzrPjRNIxmP4lpbR1F3MW5NEJ6C1IdEJhPMLy6jJ4Y3
      pBBYHifbbsGfqCM4P4It04Y7kKClpmQv6ysIe2pXg+LraqsZHnRSVKyRCFTQ2ObA6ZxAZyqg
      oakcZ/80qlokBsWLQfEpl7dvB8VrSgKnc4DqpiNkZygsKOsocSuKwYYWi6LKCWRJJwbFi0Hx
      B3NQfCIWJBiMMD7kxO3TyLEm6eqbpq6umqIcAzd7hqmoFoPihf0t5Z9Os83BSy+fvXe7MPcI
      NXf/z6xtpqx2t1UThCdP7AYV0poIgJDWRACEtCYCIKQ1EQAhrYkACGlNBEBIayIAQloTARDS
      mgiAkNZEAIS0JgIgpDURACGtiQAIaU0EQEhrIgBCWkt9LKGmsTo/yXrSQnNNGXeGevFGFOoP
      t5NYn2N21U/D4TZy7eY9rK4g7K1dXCdYBoOJSDgAxPGEJI7UFzEzt8SiO8Lx9jqmp+b2sKqC
      sPdSXgPo9EYKHA4W10Og6ZHkAL3DQYpragkkbBjMVgyqjKqqYlYIMStEyuXt21khVFXG4/EQ
      CASIhL3ENTsNVdksuqNIcTdz0zKSLUvMCiFmhdjXs0KkvuSoKpFYkoqSQuKajY7WCryhJEda
      S1DjxayuBzlcWpx6LQXhKUh9E8hgoqK65oF7bGTl3v3Xaqf8kH13NROEp0DsBhXSmgiAkNZE
      AIS0JgIgpDURACGtiQAIaU0EQEhrIgBCWhMBENKaCICQ1kQAhLQmAiCkNREAIa2JAAhpTQRA
      SGupB0DTiIV9LKysg6YR9a/R09NLMJYk5F2lzzlMPLm74XWC8KSlPiheSTI7PcPCygoaKgMj
      k7S3t2DSqYyMzVJfkcfQ+Oxe1lUQ9tyuRoTV19fTNz4LWgDXopdeurA6CjFZHNhy8jDMTIpB
      8WJQ/MEcFL+JlElOYRZHO1oYGF9AjfuJ+O3IRosYFC8GxR/MQfFyIsLgwCCxpMqiO0hbcxXO
      kVmaWw4jB92Mzbhpbm5OvZaC8BTsGIBI0MPQwCAuf4SKmkaa66sw6DaiZzBl0HHiaw88O5fj
      +aUb/zpKOOooeVJ1FoQ9s+26yb8yyfufXMWWX0ZbSzNxzzzvf3KRxO42OwVhX9l2DWDPr+R7
      362m//p5lnXFVOQVceRkLbvcRBSEfWXbxVlvMICcYCUMhJeYmx5HxoBuF50PQdhvdvw9lwwm
      8i0wMjxMxFSEeXc7HQRh39l2E0hJxHjvzV/hDqlYbdn4vW4UFXQiBMIBsu0aQGc089qf/wvK
      q6v58Y9/TGWuGXFig3DQbLsGkCQJk9WOKbrO7978LXpbCQbRARYOmB2PA0hINLd2oJ9bwZLp
      2Dj8LDrBwgGyYwBUOcGN230kkjK2YAj1aBuiCyAcJDvvBdLpKK2oxaxGWQ9E2cW5XIKwL+18
      LpAkYbfZ+Isf/RuGBgfFMQDhwNlxDaCpCiNDAwRDAcbGxlHEGkA4YHYMgM5g5syxBn731vsc
      PvmiOBAmHDg7rwGUBJ939ZFbVIh3doi4OBFOOGAesWdfwmi2sjo1yNC0W/QBhANn506wzsBL
      Z84w7/JTVVOL8UtxUeUE4ZhCpt0KgM+zjj0nDy0RYc0XprCwAL1IjbCPbbsG0DSFqx/+lvfP
      X2O4/xbXekY27QZV5QQjzl76xycBiAfcXLx0jUA8wUC/k2jQzcjU8hNvgCDsxvYnw8VCxDNK
      +PHrLwFw+dyHxJUOLHdfoTOYaG5ppW98Fk1TGJ1c4HB9FRJR9OYCaurKcfZPoarFYlC8GBSf
      cnl/xEHxEuPdlxjs7QZAMWVx+pWHP1OJevH4Q4Q9LkKmDHRyFCURR9YZxKB4MSj+2RwUb7Bm
      8bf/9b9tW4iciDDodOIJRlkpKuGVl8+wujCPvbAE/+Ikt/pGqT/cnnotBeEp2PlcICXJpx++
      S/Opr1NRmMuDP2AGUwYdJ5/b9PyiQ+UA2KobKa3e+8oKwl57xLlABl559ZsMXHqLv//v/4PP
      ekZ2s+klCPvOI06FkPngrd+QyKrh5z//D2RpfqIP6Y8IwrNq+wBoKn03LpNd/zVylHWG7szR
      fuI0GQ/pjwjCs2rbAMixIAuBJKZ1J2rxccLL48Tlp1k1QXjytu0Ea5rGyvQo62qU0FoPuoSf
      l0UHQDhgtt8Nasnkz/78eyTvHmvRGy2Y92YqXUHYN7ZfpCUdxaUbuzUDfh+Z2TliOLBw4Gx/
      KkQ8zD/+8v+gGLOYmZ6g8fhZfvjGdzCKMQHCAbJtAPQmCw11dSxHTZwsKeI73/qWmBZFOHC2
      XaQlnYHnv/FnvHb2GJpmRK/TsYtTWQRhX9r5SLAkYc0qID/HImaFFg6kRyzWGtGgjwxbNuGY
      OAQsHDyPGBOc5Pdv/haPx81b73yIuOqpcNDsMDt0lLd+80umljwE4ipJfaY4EU44cHbYC2Tl
      +z/5G+6MOIkkwWjNFNMiCgfOI/sAsWiESCRCf3//lunR5USY1TUfoOFfW9q4OryiEg2uMzgy
      TlLMpCXsczue3KBpGvMzE6xHIKIYUL80KH58eBg/GRQ6svGHkzRV5zAwOI0WXaO+rozB8TmO
      Nlc+6TYIQsq2D4CmEQ5HefW17zI3OYrJUYXpgW0gncFEU/Nh+sZnkSSJ0iIHzoEhqprqWJyE
      HEch+gVxpXgxKP4ZHRSvxEN09vZztrWYy7enyLLMUPb972J6yEaTpqk4B4Zpaj9GhhlmErPE
      wtnIBpMYFC8Gxe/rQfE7HAnW4V2a4R//6QNe/+5fUpBl3jQvkJyI4BwYJOz3sOByI8cTDPb3
      srAapqYin6HxRRrqxOaPsL9t+9MZ8LipO9yBo6CIQ3Ydxo6jTIw4qWtqx2zYeqX48qKiB16d
      Q15xxZOstyDsiW0DkOUoJjJ4kb5b14knFWyZuRx77gwmMSZAOEC2XZx1RgsvfuM1XnyatRGE
      p2zn3omm4fX6APB6veJIsHDg7BgAVY5zq68XgIGem2JQvHDg7Hw6tMGEIeTmN//0a7xazqbj
      AIJwEDyyS2uxmsnMqKCmIENsAgkHzs6nQ8sJvLIZi7LGzPTEvRkiBOGgeMQmkJmqAjtzc0vY
      S5vERfKEA2f7K8QocW73DXK44zgmNYHLtSY2gYQDZ9sAKPEYnoCP6VvnqXzpRxRbQuIqkcKB
      s20ADFY7poibi3eSPN+Ui8Ei9gIJB88OM8PpOfudv+QsABqnn39OTIsiHDg77wbVNGbH+1hX
      cijJNlNcWipCIBwoO18iSU7gvLOAyeImvKKSU1SKVZwMJxwgO+8G1RuwEmfw9i2mPYg+gHDg
      PPL33GazUV5VT5Yja2NAjNgEEg6QnQfFqzL+BLzyyivoDEb0Dyz8mqYyPdqPR83i+OEaRp3d
      eEJJmjtO4p8bZtkbprqpnZI8+5NugyCkbOfToSWJlakRzp07x9XOXuQHj4SpKgUlFejUOBAm
      pmbz/MkmZqem8EUNPPe1I6zML6Jp2pa/XY1oZmt5uz1Ad79e92/vQaEPafdui/xSefuxjg+r
      566rucf1fKCMR+wFgrySSuoamjGYbZvWAJLegM1quXtLRq8zIxlNG4HQWZF0BnR33+iLmSFk
      effnU2uqtqUcSVF2NSuEqqqosoyiKEiShCzLqOruZ1zYKOd+u3f3xW1t967rqKqwpczdzQqh
      KAqqtHft1jQevtzsZlYI7f5nueNyI+n0HCrOx+12Y7LL1D7QB1CSMcZGhpmdd1FaWkY8NM2t
      G3MUNhzFP91P9601MovrntKsELufHeHLs0LodlvmHs8KwcNmhdiDdm8pU7fLWSH0+ofMCrGL
      7/sJzwqxw9ygET46f4nAwhgrIbAVVHK8o/3e9Ig6g4napjZqmkBvMFJ4+kWSiobJaEDLO00y
      qWAyiWuqCvvbDhNjQWPTYepfe/2hD0uSDrPFsum+L84WlSQ9ZnHqqPAM2DYAqhznwodv4yyp
      AsCSU8S3XnlRXCZJOFB2OBdIovHIKU50dGzc1Bs2dYIF4SDY8TrBp0+exPqlzRxBOEi2DYCk
      02O1iO144WATW/RCWhMBENKaCICQ1kQAhLQmAiCkNREAIa2JAAhp7f8Dg32+YMiH8MUAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Sub-4 Mile Time By Year' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='150' name='Days Between First Sub-4 Mile By Family' width='164'>
      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
    </thumbnail>
    <thumbnail height='147' name='Faster &amp; Slower than Average' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Location of Sub-4 Miles Run By Americans' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Sub-4 Miles By Decade' width='192'>
      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
      NBEAIaX9f7wUm94AiXQOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Number of Sub-4 Miles By Year' width='123'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
